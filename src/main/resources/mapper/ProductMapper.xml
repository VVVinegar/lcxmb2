<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="LCXMB.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="LCXMB.pojo.Product">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="desciption" jdbcType="VARCHAR" property="desciption" />
    <result column="saler_user" jdbcType="VARCHAR" property="salerUser" />
    <result column="img_urls" jdbcType="VARCHAR" property="imgUrls" />
    <result column="price_changed" jdbcType="FLOAT" property="priceChanged" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="watch_count" jdbcType="INTEGER" property="watchCount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tel_num" jdbcType="CHAR" property="telNum" />
    <result column="quality" jdbcType="FLOAT" property="quality" />
    <result column="category_1" jdbcType="VARCHAR" property="category1" />
    <result column="category_2" jdbcType="VARCHAR" property="category2" />
  </resultMap>

  <resultMap id="PageMeShowedMap" type="LCXMB.pojo.PageMeProducts">
    <result property="id" column="id" jdbcType="INTEGER"></result>
    <result property="title" column="title" jdbcType="VARCHAR"/>
    <result column="img_urls" jdbcType="VARCHAR" property="imgUrls" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="commentsNum" property="commentsNum" jdbcType="INTEGER"></result>
  </resultMap>

  <resultMap id="SearchResultMap" type="LCXMB.pojo.SearchProducts">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="desciption" jdbcType="VARCHAR" property="desciption" />
    <result column="saler_user" jdbcType="VARCHAR" property="salerUser" />
    <result column="img_urls" jdbcType="VARCHAR" property="imgUrls" />
    <result column="price_changed" jdbcType="FLOAT" property="priceChanged" />
    <result column="price" jdbcType="FLOAT" property="price" />
    <result column="watch_count" jdbcType="INTEGER" property="watchCount" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="tel_num" jdbcType="CHAR" property="telNum" />
    <result column="quality" jdbcType="FLOAT" property="quality" />
    <result column="category_1" jdbcType="VARCHAR" property="category1" />
    <result column="category_2" jdbcType="VARCHAR" property="category2" />
    <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
    <result column="productNumber" jdbcType="INTEGER" property="productNumber" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, desciption, saler_user, img_urls, price_changed, price, watch_count, status, 
    create_time, update_time, tel_num, quality, category_1, category_2
  </sql>
  <select id="selectByExample" parameterType="LCXMB.pojo.ProductExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="LCXMB.pojo.ProductExample">
    delete from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="LCXMB.pojo.Product">
    insert into product (id, title, desciption, 
      saler_user, img_urls, price_changed, 
      price, watch_count, status, 
      create_time, update_time, tel_num, 
      quality, category_1, category_2
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{desciption,jdbcType=VARCHAR}, 
      #{salerUser,jdbcType=VARCHAR}, #{imgUrls,jdbcType=VARCHAR}, #{priceChanged,jdbcType=INTEGER}, 
      #{price,jdbcType=INTEGER}, #{watchCount,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{telNum,jdbcType=CHAR}, 
      #{quality,jdbcType=INTEGER}, #{category1,jdbcType=VARCHAR}, #{category2,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="LCXMB.pojo.Product" useGeneratedKeys="true" keyProperty="id">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="desciption != null">
        desciption,
      </if>
      <if test="salerUser != null">
        saler_user,
      </if>
      <if test="imgUrls != null">
        img_urls,
      </if>
      <if test="priceChanged != null">
        price_changed,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="watchCount != null">
        watch_count,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="telNum != null">
        tel_num,
      </if>
      <if test="quality != null">
        quality,
      </if>
      <if test="category1 != null">
        category_1,
      </if>
      <if test="category2 != null">
        category_2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="desciption != null">
        #{desciption,jdbcType=VARCHAR},
      </if>
      <if test="salerUser != null">
        #{salerUser,jdbcType=VARCHAR},
      </if>
      <if test="imgUrls != null">
        #{imgUrls,jdbcType=VARCHAR},
      </if>
      <if test="priceChanged != null">
        #{priceChanged,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="watchCount != null">
        #{watchCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="telNum != null">
        #{telNum,jdbcType=CHAR},
      </if>
      <if test="quality != null">
        #{quality,jdbcType=INTEGER},
      </if>
      <if test="category1 != null">
        #{category1,jdbcType=VARCHAR},
      </if>
      <if test="category2 != null">
        #{category2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="LCXMB.pojo.ProductExample" resultType="java.lang.Long">
    select count(*) from product
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.desciption != null">
        desciption = #{record.desciption,jdbcType=VARCHAR},
      </if>
      <if test="record.salerUser != null">
        saler_user = #{record.salerUser,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrls != null">
        img_urls = #{record.imgUrls,jdbcType=VARCHAR},
      </if>
      <if test="record.priceChanged != null">
        price_changed = #{record.priceChanged,jdbcType=INTEGER},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.watchCount != null">
        watch_count = #{record.watchCount,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.telNum != null">
        tel_num = #{record.telNum,jdbcType=CHAR},
      </if>
      <if test="record.quality != null">
        quality = #{record.quality,jdbcType=INTEGER},
      </if>
      <if test="record.category1 != null">
        category_1 = #{record.category1,jdbcType=VARCHAR},
      </if>
      <if test="record.category2 != null">
        category_2 = #{record.category2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product
    set id = #{record.id,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      desciption = #{record.desciption,jdbcType=VARCHAR},
      saler_user = #{record.salerUser,jdbcType=VARCHAR},
      img_urls = #{record.imgUrls,jdbcType=VARCHAR},
      price_changed = #{record.priceChanged,jdbcType=INTEGER},
      price = #{record.price,jdbcType=INTEGER},
      watch_count = #{record.watchCount,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      tel_num = #{record.telNum,jdbcType=CHAR},
      quality = #{record.quality,jdbcType=INTEGER},
      category_1 = #{record.category1,jdbcType=VARCHAR},
      category_2 = #{record.category2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="LCXMB.pojo.Product">
    update product
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="desciption != null">
        desciption = #{desciption,jdbcType=VARCHAR},
      </if>
      <if test="salerUser != null">
        saler_user = #{salerUser,jdbcType=VARCHAR},
      </if>
      <if test="imgUrls != null">
        img_urls = #{imgUrls,jdbcType=VARCHAR},
      </if>
      <if test="priceChanged != null">
        price_changed = #{priceChanged,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="watchCount != null">
        watch_count = #{watchCount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="telNum != null">
        tel_num = #{telNum,jdbcType=CHAR},
      </if>
      <if test="quality != null">
        quality = #{quality,jdbcType=INTEGER},
      </if>
      <if test="category1 != null">
        category_1 = #{category1,jdbcType=VARCHAR},
      </if>
      <if test="category2 != null">
        category_2 = #{category2,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="LCXMB.pojo.Product">
    update product
    set title = #{title,jdbcType=VARCHAR},
      desciption = #{desciption,jdbcType=VARCHAR},
      saler_user = #{salerUser,jdbcType=VARCHAR},
      img_urls = #{imgUrls,jdbcType=VARCHAR},
      price_changed = #{priceChanged,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      watch_count = #{watchCount,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      tel_num = #{telNum,jdbcType=CHAR},
      quality = #{quality,jdbcType=INTEGER},
      category_1 = #{category1,jdbcType=VARCHAR},
      category_2 = #{category2,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--按条件查，按更新时间排序，查5个-->
  <select id="selectByCategoryOrderAndLimit" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from product
    where category_1 = #{category1} and status = 0
    order by update_time desc
    limit 5
  </select>
  <!--按分类查，按更新时间或热度排序，取价格区间,分页-->
  <select id="selectByCate" resultMap="SearchResultMap">
    select
    id, title, desciption, saler_user, img_urls, price_changed, price, watch_count,
    status, product.create_time as create_time, update_time, tel_num, quality, category_1, category_2  ,avatar_url, count(product.id) as productNumber
    from product
    left join user_info
    on (product.saler_user = user_info.username)
    where
    <if test="category_2 != null">
      category_2 = #{category_2}
      and
    </if>
    price &gt; #{minPrice}
    and price &lt; #{maxPrice}
    and status = 0
    group by id
    order by
    price
    <if test="lowOrHigh == 0">
      asc,
    </if>
    <if test="lowOrHigh == 1">
      desc,
    </if>
    <if test="newOrHot == 0">
      update_time
    </if>
    <if test="newOrHot == 1">
      watch_count
    </if>
    desc
    limit #{begin},#{pageSize}
  </select>
  <!--按照关键字(title)模糊查询-->
  <select id="selectByTitle" resultMap="SearchResultMap">
    select
    id, title, desciption, saler_user, img_urls, price_changed, price, watch_count,
    status, product.create_time as create_time, update_time, tel_num, quality, category_1, category_2  ,avatar_url,count(product.id) as productNumber
    from product
    left join user_info
    on (product.saler_user = user_info.username)
    where status = 0
    <if test="keywords != null">
      and title like '%${keywords}%'
    </if>
    group by id
    limit #{begin},#{pageSize}
  </select>
  <!--个人中心中的展示-->
  <select id="PageMeShowed" parameterType="java.lang.String" resultMap="PageMeShowedMap">
    select product.id, product.title, product.img_urls, product.price, count(pro_comment.pro_id) as commentsNum
    from product
    left outer join pro_comment
    on (product.id = pro_comment.pro_id)
    where product.saler_user = #{username} and product.status = 0
    group by product.id
  </select>

  <!--TOP10-->
  <select id="selectTop10" resultMap="BaseResultMap">
    select * from product
    where status = 0
    order by

    <if test="field == 'update_time'">
      update_time
    </if>

    <if test="field == 'watch_count'">
      watch_count
    </if>

    <if test="field == 'price_changed'">
      price_changed
    </if>

    desc limit 10
  </select>

  <select id="selectCountByCate" resultMap="SearchResultMap">
    select count(*) as productNumber from product
    left join user_info
    on (product.saler_user = user_info.username)
    where
    <if test="category_2 != null">
      category_2 = #{category_2}
      and
    </if>
    price &gt; #{minPrice}
    and price &lt; #{maxPrice}
    and status = 0
  </select>

  <select id="selectCountByTitle" resultMap="SearchResultMap">
    select count(*) as productNumber
    from product
    left join user_info
    on (product.saler_user = user_info.username)
    where status = 0
    <if test="keywords != null">
      and title like '%${keywords}%'
    </if>
  </select>
</mapper>